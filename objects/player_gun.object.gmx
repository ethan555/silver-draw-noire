<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>gun_sp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate gun stats
event_inherited();

hp = player_stats.gun_health;
energy = player_stats.gun_energy;

ammo_cylinder = player_stats.gun_ammo;
ammo[ammo_cylinder - 1] = STANDARD;
ammo_index = 0; //from 0 to ammo - 1

xspd = 0;
yspd = 0;
xspdmax = 2.5;
xslowspd = .35;
yspdmax = YSPDMAX;
jspd = 12;

state = player_move_state;
state_index = WALK;
states[WALK] = gun_walk_state;
states[RANGE] = gun_range_state;

image_xscale = 4;
image_yscale = 4;

cloth_length = 20;//48;//16;
cloth_width = 8;
cloth_dist = 2;
cloth_xadj = 4;
cloth_yadj = 16;

var i;
for (i = 0; i &lt; cloth_length; i ++) {
    clothx1[i] = x+cloth_xadj;
    clothy1[i] = y+i*cloth_dist+cloth_yadj;
}
for (i = 0; i &lt; cloth_length; i ++) {
    clothx2[i] = x-cloth_xadj;
    clothy2[i] = y+i*cloth_dist+cloth_yadj;
}

mask_index = gun_sp;

sprite[IDLE] = gun_sp;
sprite[WALK] = gun_walk_sp;
sprite[RUN] = gun_run_sp;
sprite[CROUCH] = gun_crouch_sp;
sprite[DASH] = gun_dash_sp;
sprite[JUMP] = gun_jump_sp;
sprite[LIGHT] = gun_light_sp;
sprite[HEAVY] = gun_heavy_sp;
sprite[RANGE] = gun_range_sp;
sprite[SPECIAL] = gun_special_sp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw self and then draw cape?
event_inherited();


var i, xold, yold, xnew, ynew, ip;
var px, py, nx, ny, vx, vy, d;

clothx1[0] = x+cloth_xadj;
clothy1[0] = y+cloth_yadj;
clothx2[0] = x-cloth_xadj;
clothy2[0] = y+cloth_yadj;

//First Cloth
draw_set_colour(c_white);//image_blend);
draw_primitive_begin(pr_trianglestrip);
for (i = 1; i &lt; cloth_length; i ++) {
    if (weather.wind)
        clothx1[i] += weather.windspd;
    clothy1[i] += i/4;
    ip = (cloth_length-i)/cloth_length;
    //First part
    if (point_distance(clothx1[i-1],clothy1[i-1],clothx1[i],clothy1[i]) &gt; cloth_dist) {
        xnew = clothx1[i-1] + lengthdir_x(cloth_dist,
            lerp(
                point_direction(clothx1[i-1], clothy1[i-1], clothx1[i], clothy1[i]),
                270,
                max(4*ip - 3,0)
            )
        );
        ynew = clothy1[i-1] + lengthdir_y(cloth_dist,
            lerp(
                point_direction(clothx1[i-1], clothy1[i-1], clothx1[i], clothy1[i]),
                270,
                max(4*ip - 3,0)
            )
        );
        
        clothx1[i] = xnew;
        clothy1[i] = ynew;
    }
    
    //Draw the cloth with its width
    px = clothx1[i-1];
    py = clothy1[i-1];
    nx = clothx1[i];
    ny = clothy1[i];
    d = point_direction(px,py,nx,ny) - 90;
    vx = lengthdir_x(cloth_width, d);
    vy = lengthdir_y(cloth_width, d);
    draw_vertex(px+vx, py+vy);
    draw_vertex(px-vx, py-vy);
    draw_vertex(nx+vx, ny+vy);
    draw_vertex(nx-vx, ny-vy);
}
draw_primitive_end();

//Second Cloth
draw_primitive_begin(pr_trianglestrip);
for (i = 1; i &lt; cloth_length; i ++) {
    if (weather.wind)
        clothx2[i] += weather.windspd;
    clothy2[i] += i/4;
    ip = (cloth_length-i)/cloth_length;
    //Second part
    if (point_distance(clothx2[i-1],clothy2[i-1],clothx2[i],clothy2[i]) &gt; cloth_dist) {
        xnew = clothx2[i-1] + lengthdir_x(cloth_dist,
            lerp(
                point_direction(clothx2[i-1], clothy2[i-1], clothx2[i], clothy2[i]),
                270,
                max(4*ip - 3,0)
            )
        );
        ynew = clothy2[i-1] + lengthdir_y(cloth_dist,
            lerp(
                point_direction(clothx2[i-1], clothy2[i-1], clothx2[i], clothy2[i]),
                270,
                max(4*ip - 3,0)
            )
        );
        
        clothx2[i] = xnew;
        clothy2[i] = ynew;
    }
    
    //Draw the cloth with its width
    px = clothx2[i-1];
    py = clothy2[i-1];
    nx = clothx2[i];
    ny = clothy2[i];
    d = point_direction(px,py,nx,ny) - 90;
    vx = lengthdir_x(cloth_width, d);
    vy = lengthdir_y(cloth_width, d);
    draw_vertex(px+vx, py+vy);
    draw_vertex(px-vx, py-vy);
    draw_vertex(nx+vx, ny+vy);
    draw_vertex(nx-vx, ny-vy);
}
draw_primitive_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
